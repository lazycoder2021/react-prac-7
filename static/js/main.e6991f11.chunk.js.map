{"version":3,"sources":["logo.svg","components/ContactForm.js","Firebase.js","components/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullName","mobile","email","address","useState","values","setValues","useEffect","currentId","contactObjects","handleInputChange","e","target","name","value","autocomplete","onSubmit","preventDefault","addOrEdit","style","marginBottom","className","placeholder","onChange","marginTop","type","width","fireDb","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setContactObjects","setCurrentId","firebaseDb","child","on","snapshot","val","class","obj","push","err","console","log","set","Object","keys","map","id","onClick","key","window","confirm","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,mCC8EAA,EA5EK,SAACC,GACjB,IAAMC,EAAqB,CACvBC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,QAAS,IALc,EAQDC,mBAASL,GARR,mBAQtBM,EARsB,KAQdC,EARc,KAU3BC,qBAAU,WACiB,IAAnBT,EAAMU,UACNF,EAAU,eACHP,IAGPO,EAAU,eACHR,EAAMW,eAAeX,EAAMU,eAGvC,CAACV,EAAMU,UAAWV,EAAMW,iBAE3B,IAAMC,EAAoB,SAACC,GAAO,IAAD,EACPA,EAAEC,OAAlBC,EADuB,EACvBA,KAAMC,EADiB,EACjBA,MACZR,EAAU,2BACHD,GADE,kBAEJQ,EAAOC,MAUhB,OACI,uBAAMC,aAAa,MAAMC,SAPJ,SAACL,GACtBA,EAAEM,iBACFnB,EAAMoB,UAAUb,IAKqCc,MAAO,CAAEC,aAAc,QAA5E,UACI,sBAAKC,UAAU,yBAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,mBAAGA,UAAU,mBAGrB,uBAAOA,UAAU,eAAeC,YAAY,YAAYT,KAAK,WAAWC,MAAOT,EAAOL,SAAUuB,SAAUb,EAAmBS,MAAO,CAAEC,aAAc,aAExJ,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,mBAAGA,UAAU,qBAGrB,uBAAOA,UAAU,eAAeC,YAAY,SAAST,KAAK,SAASC,MAAOT,EAAOJ,OAAQsB,SAAUb,EAAmBS,MAAO,CAAEC,aAAc,aAEjJ,sBAAKC,UAAU,kCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,mBAAGA,UAAU,uBAGrB,uBAAOA,UAAU,eAAeC,YAAY,QAAQT,KAAK,QAAQC,MAAOT,EAAOH,MAAOqB,SAAUb,EAAmBS,MAAO,CAAEC,aAAc,gBAIlJ,qBAAKC,UAAU,aAAf,SACI,0BAAUA,UAAU,eAAeC,YAAY,UAAUT,KAAK,UAAUC,MAAOT,EAAOF,QAASoB,SAAUb,MAG7G,qBAAKW,UAAU,aAAaF,MAAO,CAAEK,UAAW,QAAhD,SACI,uBAAOC,KAAK,SAASX,MAA0B,IAAnBhB,EAAMU,UAAkB,OAAS,SAAUa,UAAU,4BAA4BF,MAAO,CAAEO,MAAO,gBCzD9HC,E,MAFFC,EAASC,cAVD,CACjBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,2DACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,cACnBC,MAAO,6CAKWC,WAAWC,MCiGlBC,EA5GE,WAAO,IAAD,EAGuBnC,mBAAS,IAHhC,mBAGdK,EAHc,KAGE+B,EAHF,OAIapC,mBAAS,IAJtB,mBAIdI,EAJc,KAIHiC,EAJG,KAMnBlC,qBAAU,WACNmC,EAAWC,MAAM,YAAYC,GAAG,SAAS,SAAAC,GACjCA,EAASC,MACTN,EAAkB,eACXK,EAASC,aASzB,IAoCH,OACI,qCACI,qBAAKC,MAAM,4BAAX,SACI,qBAAKA,MAAM,YAAX,SACI,oBAAIA,MAAM,wBAAwB5B,MAAO,CAAEC,aAAc,QAAzD,kCAKR,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CAAoBH,UA7ClB,SAAC8B,GACE,IAAbxC,EACAkC,EAAWC,MAAM,YAAYM,KACzBD,GACA,SAAAE,GACQA,EACAC,QAAQC,IAAIF,GAEZT,EAAa,OAGzBC,EAAWC,MAAX,mBAA6BnC,IAAa6C,IACtCL,GACA,SAAAE,GACQA,EACAC,QAAQC,IAAIF,GAEZT,EAAa,QA4BcjC,YAAWC,qBAE9C,qBAAKY,UAAU,WAAf,SACI,wBAAOA,UAAU,wCAAjB,UACI,uBAAOA,UAAU,cAAjB,SACI,+BACI,2CACA,wCACA,uCACA,6CAIR,gCAEQiC,OAAOC,KAAK9C,GAAgB+C,KAAI,SAAAC,GAC5B,OAAO,+BACH,6BAAKhD,EAAegD,GAAIzD,WACxB,6BAAKS,EAAegD,GAAIxD,SACxB,6BAAKQ,EAAegD,GAAIvD,QACxB,+BACI,mBAAGmB,UAAU,mBAAmBqC,QAAS,WAAQjB,EAAagB,IAA9D,SACI,mBAAGpC,UAAU,mBAEjB,mBAAGA,UAAU,kBAAkBqC,QAAS,kBAhD9DC,EAgD6EF,OA/CvFG,OAAOC,QAAQ,wCACfnB,EAAWC,MAAX,mBAA6BgB,IAAOG,QAChC,SAAAZ,GACQA,EACAC,QAAQC,IAAIF,GAEZT,EAAa,QAPhB,IAACkB,GAgDsB,SACI,mBAAGtC,UAAU,uBATToC,oBCxErCM,MAVf,WACE,OACI,qBAAK1C,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,EAAD,SCIC2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6991f11.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n    const initialFieldValues = {\r\n        fullName: '', \r\n        mobile: '', \r\n        email: '',\r\n        address: ''\r\n    }\r\n\r\n    var [values, setValues] = useState(initialFieldValues)\r\n\r\n    useEffect(() => {\r\n        if (props.currentId == '')\r\n            setValues({\r\n                ...initialFieldValues\r\n            })\r\n        else\r\n            setValues({\r\n                ...props.contactObjects[props.currentId]\r\n            })\r\n\r\n    }, [props.currentId, props.contactObjects])\r\n\r\n    const handleInputChange = (e) => {\r\n        var { name, value } = e.target; // de-structing? yes it is de-structuring from the input properties assigned below in the JSX\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault(); \r\n        props.addOrEdit(values); \r\n    }\r\n\r\n\r\n    return (\r\n        <form autocomplete=\"off\" onSubmit={handleFormSubmit} style={{ marginBottom: \"30px\" }}>\r\n            <div className=\"form-group input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                        <i className=\"fa fa-user\"></i>\r\n                     </div>\r\n                </div>\r\n                <input className=\"form-control\" placeholder=\"Full Name\" name=\"fullName\" value={values.fullName} onChange={handleInputChange} style={{ marginBottom: \"15px\" }} />\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fa fa-mobile\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Mobile\" name=\"mobile\" value={values.mobile} onChange={handleInputChange} style={{ marginBottom: \"15px\" }}/>\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fa fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Email\" name=\"email\" value={values.email} onChange={handleInputChange} style={{ marginBottom: \"15px\" }}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <textarea className=\"form-control\" placeholder=\"Address\" name=\"address\" value={values.address} onChange={handleInputChange} />\r\n            </div>\r\n\r\n            <div className=\"form-group\" style={{ marginTop: \"30px\" }}>\r\n                <input type=\"submit\" value={props.currentId == '' ? \"Save\" : \"Update\"} className=\"btn btn-primary btn-block\" style={{ width: \"100%\" }} />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import firebase from \"firebase\"; \r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBu1G1pQ-4HNMa_rQ9QAcQ-J0-RNX_rGRc\",\r\n    authDomain: \"fire-base-crud-b376a.firebaseapp.com\",\r\n    databaseURL: \"https://fire-base-crud-b376a-default-rtdb.firebaseio.com\",\r\n    projectId: \"fire-base-crud-b376a\",\r\n    storageBucket: \"fire-base-crud-b376a.appspot.com\",\r\n    messagingSenderId: \"55795977722\",\r\n    appId: \"1:55795977722:web:c7fb553245894bb7fbe843\"\r\n};\r\n// Initialize Firebase\r\nvar fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fireDb.database().ref(); \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { useState, useEffect } from 'react'; \r\nimport ContactForm from './ContactForm';\r\nimport firebaseDb from '../Firebase'; \r\n\r\nconst Contacts = () => {\r\n\r\n\r\n    var [contactObjects, setContactObjects] = useState({});\r\n    var [currentId, setCurrentId] = useState(''); \r\n\r\n    useEffect(() => {\r\n        firebaseDb.child('contacts').on('value', snapshot => {\r\n            if (snapshot.val() != null)\r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n            else \r\n                setContactObjects({\r\n                    ...snapshot.val()\r\n                })\r\n        })\r\n   \r\n\r\n     },[])\r\n\r\n    const addOrEdit = (obj) => {\r\n        if (currentId == '')\r\n            firebaseDb.child('contacts').push(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                })\r\n        else\r\n            firebaseDb.child(`contacts/${currentId}`).set(\r\n                obj,\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                })\r\n    }\r\n\r\n    const onDelete = (key) => {\r\n        if (window.confirm('Are you sure to delete this record?')) {\r\n            firebaseDb.child(`contacts/${key}`).remove(\r\n                err => {\r\n                    if (err)\r\n                        console.log(err)\r\n                    else\r\n                        setCurrentId('')\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"jumbotron jumbotron-fluid\">\r\n                <div class=\"container\">\r\n                    <h1 class=\"display-4 text-center\" style={{ marginBottom: \"30px\" }}>Contact Register</h1>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <ContactForm {...({ addOrEdit, currentId, contactObjects })}/> \r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    <table className=\"table table-borderless table-stripped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>Full Name</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObjects).map(id => { // figure out this...\r\n                                    return <tr key={id}>\r\n                                        <td>{contactObjects[id].fullName}</td>\r\n                                        <td>{contactObjects[id].mobile}</td>\r\n                                        <td>{contactObjects[id].email}</td>\r\n                                        <td>\r\n                                            <a className=\"btn text-primary\" onClick={() => { setCurrentId(id) }  }>\r\n                                                <i className=\"fa fa-pencil\"></i>\r\n                                            </a>\r\n                                            <a className=\"btn text-danger\" onClick={() => onDelete(id)}>\r\n                                                <i className=\"fa fa-trash\"></i>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                })\r\n                            }\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    ); \r\n}\r\n\r\nexport default Contacts; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Contacts from './components/Contacts';\r\n\nfunction App() {\n  return (\n      <div className=\"row\">\n          <div className=\"col-md-8 offset-md-2\">\n              <Contacts />\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}